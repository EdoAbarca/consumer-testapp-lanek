# Environment Configuration Template for Docker Compose
# Copy this file to .env and update the values as needed
# DO NOT commit .env file to version control

# ======================
# DATABASE CONFIGURATION
# ======================

# PostgreSQL Database Settings
POSTGRES_DB=consumer_testapp
POSTGRES_USER=postgres
POSTGRES_PASSWORD=your-secure-password-here
POSTGRES_PORT=5432

# ======================
# BACKEND CONFIGURATION  
# ======================

# Flask Environment Settings
FLASK_ENV=development
SECRET_KEY=your-super-secret-key-change-in-production-min-32-chars
JWT_SECRET_KEY=your-jwt-secret-key-change-in-production-min-32-chars

# Backend Service Port
BACKEND_PORT=5000

# CORS Configuration
CORS_ORIGINS=http://localhost:3000,http://127.0.0.1:3000

# Debug Mode
DEBUG=true

# ======================
# FRONTEND CONFIGURATION
# ======================

# Next.js Environment Settings
NODE_ENV=development
NEXT_PUBLIC_API_URL=http://localhost:5000/api
NEXTAUTH_URL=http://localhost:3000
NEXTAUTH_SECRET=your-nextauth-secret-here-min-32-chars

# Frontend Service Port
FRONTEND_PORT=3000

# ======================
# DEVELOPMENT NOTES
# ======================

# For production deployment:
# 1. Change all default passwords and secrets
# 2. Set FLASK_ENV=production
# 3. Set NODE_ENV=production  
# 4. Set DEBUG=false
# 5. Update CORS_ORIGINS to your production domain
# 6. Update NEXT_PUBLIC_API_URL to your production backend URL
# 7. Update NEXTAUTH_URL to your production frontend URL